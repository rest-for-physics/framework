<?xml version="1.0" encoding="UTF-8" standalone="no" ?>

<!--This file is an example of REST simulation functionality. We process the output root file
from restG4, converting its TRestGeant4Event to TRestDetectorSignalEvent. Observables and processes's
internal values are saved.
-->

<TRestManager name="RESTManagerSim" title="Template manager to process a simulation generated by restG4.">

  <TRestRun name="Run metadata" title="REST Metadata run info (template)" verboseLevel="info">
    <parameter name="experimentName" value="Test"/>
    <parameter name="runType" value="simulation"/>
    <parameter name="runNumber" value="-1"/> //it will find next run number from database when we use "auto"
    <parameter name="runTag" value="preserve"/>
    <parameter name="runDescription" value="We launch just 100 events to check everything is ok."/>
    <parameter name="user" value="${USER}"/>
    <parameter name="verboseLevel" value="2"/>
    <parameter name="outputFile" value="Run[fRunNumber]_[fRunTag].root" />

    /// from the previously saved metadata file("restManager --c saveMetadataFile.rml --o meta.root")
    <!--
    <addMetadata type="TRestDetectorReadout" name="PandaReadout_MxM" file="meta.root"/>
    <TRestDetectorGas name="Xenon-TMA 1Pct 10-10E3Vcm" pressure="10" file="server"/>
    -->

  </TRestRun>


  <TRestProcessRunner name="TemplateEventProcess" verboseLevel="info">
    <parameter name="eventsToProcess" value="0" />
    <parameter name="threadNumber" value="2"/>

    <parameter name="inputAnalysisStorage" value="off"/>
    <parameter name="inputEventStorage" value="on"/>
    <parameter name="outputEventStorage" value="on"/>

    // observable = all will add all NON `custom` observables
    <addProcess type="TRestGeant4AnalysisProcess" name="g4Ana" value="ON" >
        <parameter name="observable" value="all" />
    </addProcess>

    <!-- TODO We need more specific examples of Geant4 analysis observables
         to show how to use custom observables related to TrackCounter, EDep, etc.

    <addProcess type="TRestGeant4AnalysisProcess" name="g4Ana" value="ON" >
      <observable name="xOriginPrimary" value="ON" description="This is the x-coordinate of the origin position of the primary. " />
    </addProcess>

    -->

  </TRestProcessRunner>

  <addTask type="processEvents" value="ON" />

  <globals>
    <parameter name="verboseLevel" value="essential" /> %options are : silent(0), essential(1), info(2), debug(3), extreme(4)
    <parameter name="inputFile" value=""/>
    <searchPath value="$ENV{REST_INPUTDATA}/definitions/"/>
  </globals>


</TRestManager>


<!--parameter here is accessible to all the classes-->
