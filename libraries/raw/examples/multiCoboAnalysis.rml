<?xml version="1.0" encoding="UTF-8" standalone="no" ?>

<!--In this example, when launching the analysis, we are doing following operations inside TRestManager:
1. Initialize TRestRun
1.1 set input and output file for TRestRun(here input and output is in "globals")
1.2 addMetadata to TRestRun
2. Initialize TRestProcessRunner
2.1 set number of events to process
2.2 set thread number
2.3 set output tree branches
2.4 add multiple processes
2.4.1 override some parameters in the process
2.4.1 add additional observables in the process
3. Add a task to call TRestProcessRunner to run
-->

<TRestManager name="CoBoDataAnalysis" title="Example" verboseLevel="info" >

  <TRestRun name="SJTU_Proto" >
    <parameter name="runNumber" value="-1"/>//change this value to "auto" to enable database
    <parameter name="outputFile" value="RUN[RunNumber]_[Time]_[LastProcess].root" />

    /// from the previously saved metadata file("restManager --c saveMetadataFile.rml --o meta.root")
    <addMetadata name="PandaReadout_MxM" file="meta.root"/>
    /// we can alternatively use "addMetadata name="Xenon-TMA 1Pct 10-10E3Vcm" file="meta.root"
    <TRestGas name="Xenon-TMA 1Pct 10-10E3Vcm" pressure="10" file="server"/>
  </TRestRun>

  <TRestProcessRunner name="Processor" verboseLevel="info">
    <parameter name="eventsToProcess" value="0" />
    <parameter name="threadNumber" value="2"/>
    
    <parameter name="inputAnalysis" value="on"/>
    <parameter name="inputEvent" value="on"/>
    <parameter name="outputEvent" value="on"/>

    <addProcess type="TRestMultiCoBoAsAdToSignalProcess" name="virtualDAQ" value="ON"/>
    <addProcess type="TRestRawSignalAnalysisProcess" name="sAna" value="ON">
      <parameter name="pointThreshold" value="3" />
      <parameter name="pointsOverThreshold" value="3" />
      <parameter name="observable" value="all" />
      /// no need for explicit observable definition if we use "observable=all"
      <!--<observable name="baseline" value="ON" />
      <observable name="SecondsFromStart" value="ON" />
      <observable name="ThresholdIntegral" value="ON" />-->
    </addProcess>
    <addProcess type="TRestSignalZeroSuppresionProcess" name="zS" value="ON" file="processes.rml"/>
    <addProcess type="TRestReadoutAnalysisProcess" name="rA" value="ON">
      <parameter name="modulesHist" value="3:6:8"/>
      <parameter name="modulesAmp" value="3-1.2:6-1.3:8-0.7"/>
      <observable name="FirstX" value="ON" />
      <observable name="FirstY" value="ON" />
      <observable name="CalibratedIntegral" value="ON" />
    </addProcess>
    <addProcess type="TRestSignalToHitsProcess" name="signalToHits" value="ON" file="processes.rml"/>
    <addProcess type="TRestHitsAnalysisProcess" name="hitsAna" value="OFF" file="processes.rml" />
    <addProcess type="TRestHitsToTrackProcess" name="hitsToTrack" value="ON"/>
    <addProcess type="TRestTrackAnalysisProcess" name="tckAna" value="ON" />

  </TRestProcessRunner>

  <addTask command="SJTU_Proto->PrintMetadata()" value="OFF"/>  
  <addTask command="Processor->RunProcess()" value="ON"/>

  <globals>
    <searchPath value="$ENV{REST_INPUTDATA}/definitions/"/>
    <parameter name="verboseLevel" value="essential" /> %options are : silent(0), essential(1), info(2), debug(3), extreme(4)
    <parameter name="mainDataPath" value="" />
  </globals>

</TRestManager>


<!--paramater here is accessible to all the classes-->


